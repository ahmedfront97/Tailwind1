/*! tailwindcss v4.1.15 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-normal: 400;
    --font-weight-bold: 700;
    --radius-lg: 0.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, currentcolor 50%, transparent);
        }
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\!visible {
    visibility: visible !important;
  }
  .visible {
    visibility: visible;
  }
  .\!absolute {
    position: absolute !important;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .inset-x-\[15\%\] {
    inset-inline: 15%;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-5 {
    bottom: calc(var(--spacing) * 5);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[2\] {
    z-index: 2;
  }
  .z-\[1000\] {
    z-index: 1000;
  }
  .float-left {
    float: left;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .\!-m-px {
    margin: -1px !important;
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-\[3px\] {
    margin-inline: 3px;
  }
  .mx-\[15\%\] {
    margin-inline: 15%;
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-2\.5 {
    margin-inline-start: calc(var(--spacing) * 2.5);
  }
  .me-4 {
    margin-inline-end: calc(var(--spacing) * 4);
  }
  .me-5 {
    margin-inline-end: calc(var(--spacing) * 5);
  }
  .me-auto {
    margin-inline-end: auto;
  }
  .-mt-4 {
    margin-top: calc(var(--spacing) * -4);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .-mr-\[100\%\] {
    margin-right: calc(100% * -1);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .box-content {
    box-sizing: content-box;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .\!h-px {
    height: 1px !important;
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-\[3px\] {
    height: 3px;
  }
  .\!w-px {
    width: 1px !important;
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-\[15\%\] {
    width: 15%;
  }
  .w-\[30px\] {
    width: 30px;
  }
  .w-full {
    width: 100%;
  }
  .min-w-max {
    min-width: max-content;
  }
  .flex-initial {
    flex: 0 auto;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .basis-\[100\%\] {
    flex-basis: 100%;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .list-none {
    list-style-type: none;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .\!overflow-hidden {
    overflow: hidden !important;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .\!border-0 {
    border-style: var(--tw-border-style) !important;
    border-width: 0px !important;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-y-\[10px\] {
    border-block-style: var(--tw-border-style);
    border-block-width: 10px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-zinc-50 {
    background-color: var(--color-zinc-50);
  }
  .bg-none {
    background-image: none;
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .\!p-0 {
    padding: calc(var(--spacing) * 0) !important;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-\[0\.35em\] {
    padding-inline: 0.35em;
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-\[0\.15em\] {
    padding-block: 0.15em;
  }
  .ps-0 {
    padding-inline-start: calc(var(--spacing) * 0);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .-indent-\[999px\] {
    text-indent: calc(999px * -1);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[0\.6rem\] {
    font-size: 0.6rem;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .\!whitespace-nowrap {
    white-space: nowrap !important;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\/50 {
    color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 50%, transparent);
      }
    }
  }
  .text-black\/60 {
    color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 60%, transparent);
      }
    }
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-\[600ms\] {
    --tw-duration: 600ms;
    transition-duration: 600ms;
  }
  .ease-\[cubic-bezier\(0\.25\,0\.1\,0\.25\,1\.0\)\] {
    --tw-ease: cubic-bezier(0.25,0.1,0.25,1.0);
    transition-timing-function: cubic-bezier(0.25,0.1,0.25,1.0);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .\!\[clip\:rect\(0\,0\,0\,0\)\] {
    clip: rect(0,0,0,0) !important;
  }
  .after\:clear-both {
    &::after {
      content: var(--tw-content);
      clear: both;
    }
  }
  .after\:block {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
  .after\:content-\[\'\'\] {
    &::after {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .hover\:bg-zinc-200\/60 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(92% 0.004 286.32) 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-zinc-200) 60%, transparent);
          }
        }
      }
    }
  }
  .hover\:text-black\/80 {
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #000 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            color: color-mix(in oklab, var(--color-black) 80%, transparent);
          }
        }
      }
    }
  }
  .hover\:text-neutral-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-900);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .hover\:opacity-90 {
    &:hover {
      @media (hover: hover) {
        opacity: 90%;
      }
    }
  }
  .hover\:shadow-none {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:ease-in-out {
    &:hover {
      @media (hover: hover) {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
      }
    }
  }
  .hover\:outline-none {
    &:hover {
      @media (hover: hover) {
        --tw-outline-style: none;
        outline-style: none;
      }
    }
  }
  .focus\:bg-zinc-200\/60 {
    &:focus {
      background-color: color-mix(in srgb, oklch(92% 0.004 286.32) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          background-color: color-mix(in oklab, var(--color-zinc-200) 60%, transparent);
        }
      }
    }
  }
  .focus\:text-black\/80 {
    &:focus {
      color: color-mix(in srgb, #000 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
      }
    }
  }
  .focus\:text-neutral-900 {
    &:focus {
      color: var(--color-neutral-900);
    }
  }
  .focus\:text-white {
    &:focus {
      color: var(--color-white);
    }
  }
  .focus\:no-underline {
    &:focus {
      text-decoration-line: none;
    }
  }
  .focus\:opacity-90 {
    &:focus {
      opacity: 90%;
    }
  }
  .focus\:shadow-none {
    &:focus {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-0 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:bg-zinc-200\/60 {
    &:active {
      background-color: color-mix(in srgb, oklch(92% 0.004 286.32) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          background-color: color-mix(in oklab, var(--color-zinc-200) 60%, transparent);
        }
      }
    }
  }
  .active\:text-black\/80 {
    &:active {
      color: color-mix(in srgb, #000 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
      }
    }
  }
  .active\:no-underline {
    &:active {
      text-decoration-line: none;
    }
  }
  .data-\[twe-dropdown-show\]\:block {
    &[data-twe-dropdown-show] {
      display: block;
    }
  }
  .motion-reduce\:transition-none {
    @media (prefers-reduced-motion: reduce) {
      transition-property: none;
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:mb-0 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .lg\:\!flex {
    @media (width >= 64rem) {
      display: flex !important;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:basis-auto {
    @media (width >= 64rem) {
      flex-basis: auto;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:flex-wrap {
    @media (width >= 64rem) {
      flex-wrap: wrap;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:px-2 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .lg\:py-4 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .lg\:pe-2 {
    @media (width >= 64rem) {
      padding-inline-end: calc(var(--spacing) * 2);
    }
  }
  .dark\:bg-neutral-700 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:text-neutral-200 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
  .dark\:text-white\/60 {
    @media (prefers-color-scheme: dark) {
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800\/25 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(26.9% 0 0) 25%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              background-color: color-mix(in oklab, var(--color-neutral-800) 25%, transparent);
            }
          }
        }
      }
    }
  }
  .dark\:hover\:text-neutral-400 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-400);
        }
      }
    }
  }
  .dark\:hover\:text-white\/80 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          color: color-mix(in srgb, #fff 80%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              color: color-mix(in oklab, var(--color-white) 80%, transparent);
            }
          }
        }
      }
    }
  }
  .dark\:focus\:bg-neutral-800\/25 {
    @media (prefers-color-scheme: dark) {
      &:focus {
        background-color: color-mix(in srgb, oklch(26.9% 0 0) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-neutral-800) 25%, transparent);
          }
        }
      }
    }
  }
  .dark\:focus\:text-neutral-400 {
    @media (prefers-color-scheme: dark) {
      &:focus {
        color: var(--color-neutral-400);
      }
    }
  }
  .dark\:focus\:text-white\/80 {
    @media (prefers-color-scheme: dark) {
      &:focus {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            color: color-mix(in oklab, var(--color-white) 80%, transparent);
          }
        }
      }
    }
  }
  .dark\:active\:bg-neutral-800\/25 {
    @media (prefers-color-scheme: dark) {
      &:active {
        background-color: color-mix(in srgb, oklch(26.9% 0 0) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-neutral-800) 25%, transparent);
          }
        }
      }
    }
  }
  .dark\:active\:text-white\/80 {
    @media (prefers-color-scheme: dark) {
      &:active {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            color: color-mix(in oklab, var(--color-white) 80%, transparent);
          }
        }
      }
    }
  }
  .\[\&\>svg\]\:w-5 {
    &>svg {
      width: calc(var(--spacing) * 5);
    }
  }
  .\[\&\>svg\]\:w-7 {
    &>svg {
      width: calc(var(--spacing) * 7);
    }
  }
  .\[\&\>svg\]\:stroke-black\/50 {
    &>svg {
      stroke: color-mix(in srgb, #000 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          stroke: color-mix(in oklab, var(--color-black) 50%, transparent);
        }
      }
    }
  }
  .dark\:\[\&\>svg\]\:stroke-neutral-200 {
    @media (prefers-color-scheme: dark) {
      &>svg {
        stroke: var(--color-neutral-200);
      }
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
